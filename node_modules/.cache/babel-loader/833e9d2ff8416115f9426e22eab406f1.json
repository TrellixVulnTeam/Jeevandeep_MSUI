{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: false,\n  crossDomain: true // headers: {\n  //   'Content-Type': 'application/json',\n  //   'Access-Control-Allow-Origin': '*',\n  // },\n\n}); // Set the AUTH token for any request\n\naxiosInstance.interceptors.request.use(function (config) {\n  // const token = localStorage.getItem('access_token');\n  // config.headers.Authorization = token ? `Bearer ${token}` : '';\n  return config;\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (!error.response) {// toast.error('Failed to connect with server !! Try again later ..');\n  } // else if (error.response.status === 401) {\n  //   localStorage.removeItem(\"token\");\n  //   localStorage.removeItem(\"user\");\n  // }\n  // else if (error.response.status === 404) {\n  //   // toast.error('Page not found');\n  // }\n\n\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","process","env","REACT_APP_BACKEND_URL","withCredentials","crossDomain","interceptors","request","use","config","response","error","Promise","reject"],"sources":["/Users/yashcomputers/Desktop/JeevanDeepNew/JeevandeppFront/src/service/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance =  axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  withCredentials: false,\r\n  crossDomain: true,\r\n  // headers: {\r\n  //   'Content-Type': 'application/json',\r\n  //   'Access-Control-Allow-Origin': '*',\r\n  // },\r\n});\r\n\r\n// Set the AUTH token for any request\r\naxiosInstance.interceptors.request.use(function (config) {\r\n  // const token = localStorage.getItem('access_token');\r\n  // config.headers.Authorization = token ? `Bearer ${token}` : '';\r\n  return config;\r\n});\r\n\r\naxiosInstance.interceptors.response.use(response => {\r\n  return response;\r\n}, (error) => {\r\n  if (!error.response) {\r\n    // toast.error('Failed to connect with server !! Try again later ..');\r\n  }\r\n  // else if (error.response.status === 401) {\r\n  //   localStorage.removeItem(\"token\");\r\n  //   localStorage.removeItem(\"user\");\r\n  // }\r\n  // else if (error.response.status === 404) {\r\n  //   // toast.error('Page not found');\r\n  // }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAID,KAAK,CAACE,MAAN,CAAa;EAClCC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADa;EAElCC,eAAe,EAAE,KAFiB;EAGlCC,WAAW,EAAE,IAHqB,CAIlC;EACA;EACA;EACA;;AAPkC,CAAb,CAAvB,C,CAUA;;AACAP,aAAa,CAACQ,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,UAAUC,MAAV,EAAkB;EACvD;EACA;EACA,OAAOA,MAAP;AACD,CAJD;AAMAX,aAAa,CAACQ,YAAd,CAA2BI,QAA3B,CAAoCF,GAApC,CAAwCE,QAAQ,IAAI;EAClD,OAAOA,QAAP;AACD,CAFD,EAEIC,KAAD,IAAW;EACZ,IAAI,CAACA,KAAK,CAACD,QAAX,EAAqB,CACnB;EACD,CAHW,CAIZ;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,OAAOE,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAdD;AAgBA,eAAeb,aAAf"},"metadata":{},"sourceType":"module"}